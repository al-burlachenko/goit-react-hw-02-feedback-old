{"version":3,"sources":["components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOption.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["StatisticsList","styled","ul","StatisticsItem","li","Statistics","statistics","total","positivePercentage","map","name","value","ButtonItem","button","Buttons","div","FeedbackOptions","options","onLeaveFeedback","option","type","onClick","SectionWrapper","section","Title","h2","Section","title","children","Message","p","Notification","message","App","state","good","neutral","bad","setState","prevState","Object","values","this","reduce","acc","Number","parseInt","countTotalFeedback","countPositiveFeedbackPercentage","keys","entries","Boolean","Component","propTypes","PropTypes","string","arrayOf","func","array","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAiBC,IAAOC,GAAV,wGAOdC,EAAiBF,IAAOG,GAAV,kH,OCUZC,I,IAAAA,EAdf,YAAgE,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACvC,OACE,eAACR,EAAD,WACGM,EAAWG,KAAI,mCAAEC,EAAF,KAAQC,EAAR,YACd,eAACR,EAAD,WACGO,EADH,IACUC,IADWD,MAIvB,eAACP,EAAD,qBAAwBI,KACxB,eAACJ,EAAD,iCAAoCK,EAApC,WCZOI,EAAaX,IAAOY,OAAV,qkBA8BVC,EAAUb,IAAOc,IAAV,8CCXLC,I,IAAAA,EAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,cAACJ,EAAD,UACGG,EAAQR,KAAI,SAACU,GAAD,OACX,cAACP,EAAD,CACEQ,KAAK,SACLC,QAAS,kBAAMH,EAAgBC,IAFjC,SAKGA,GAFIA,SCVFG,EAAiBrB,IAAOsB,QAAV,6CAGdC,EAAQvB,IAAOwB,GAAV,gFCSHC,I,EAAAA,EATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACN,EAAD,WACE,cAACE,EAAD,UAAQG,IACPC,MCPMC,EAAU5B,IAAO6B,EAAV,iDCOLC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCEbC,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPnB,gBAAkB,SAACP,GACjB,EAAK2B,UAAS,SAACC,GACb,OAAO,eAAG5B,EAAQ4B,EAAU5B,GAAS,O,wDAIzC,WACE,OAAO6B,OAAOC,OAAOC,KAAKR,OAAOS,QAAO,SAACC,EAAKjC,GAAN,OAAgBiC,EAAMjC,IAAO,K,6CAGvE,WACE,OAA2B,IAApB+B,KAAKR,MAAMC,KACd,EACAU,OAAOC,SAAUJ,KAAKR,MAAMC,KAAOO,KAAKK,qBAAwB,O,oBAGtE,WACE,IAAMxC,EAAQmC,KAAKK,qBACbvC,EAAqBkC,KAAKM,kCAC1B/B,EAAUuB,OAAOS,KAAKP,KAAKR,OAC3B5B,EAAakC,OAAOU,QAAQR,KAAKR,OAEvC,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASA,EACTC,gBAAiBwB,KAAKxB,oBAI1B,eAAC,EAAD,CAASS,MAAM,aAAf,UACGwB,QAAQ5C,IACP,cAAC,EAAD,CACED,WAAYA,EACZC,MAAOA,EACPC,mBAAoBA,KAGtBD,GAAS,cAAC,EAAD,CAAcyB,QAAQ,mC,GA9CzBoB,aAqDHnB,IAEfP,EAAQ2B,UAAY,CAAE1B,MAAO2B,IAAUC,QAEvCvC,EAAgBqC,UAAY,CAC1BpC,QAASqC,IAAUE,QAAQF,IAAUC,QACrCrC,gBAAiBoC,IAAUG,MAG7BpD,EAAWgD,UAAY,CACrB/C,WAAYgD,IAAUE,QAAQF,IAAUI,OACxCnD,MAAO+C,IAAUK,OACjBnD,mBAAoB8C,IAAUK,QAGhC5B,EAAasB,UAAY,CACvBrB,QAASsB,IAAUC,Q,MCtErBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e284ce81.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StatisticsList = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  display: flex;\n  flex-direction: column;\n`;\nexport const StatisticsItem = styled.li`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  text-transform: capitalize;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StatisticsItem, StatisticsList } from \"./Statistics.styled\";\n\nfunction Statistics({ statistics, total, positivePercentage }) {\n  return (\n    <StatisticsList>\n      {statistics.map(([name, value]) => (\n        <StatisticsItem key={name}>\n          {name}:{value}\n        </StatisticsItem>\n      ))}\n      <StatisticsItem>Total: {total}</StatisticsItem>\n      <StatisticsItem>Positive feedback: {positivePercentage}%</StatisticsItem>\n    </StatisticsList>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  statistics: PropTypes.arrayOf(PropTypes.array),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ButtonItem = styled.button`\n  background-color: transparent;\n  border: 2px solid #000;\n  border-radius: 0.6em;\n\n  display: flex;\n  justify-content: space-between;\n  padding: 1.2em 2.8em;\n  margin-left: 6px;\n\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1;\n  text-decoration: none;\n  text-align: center;\n  text-transform: capitalize;\n\n  transition: box-shadow 600ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0 0 40px 40px #222 inset;\n    color: #fff;\n  }\n\n  &:first-of-type {\n    margin-left: 0px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Buttons, ButtonItem } from \"./FeedbackOption.styled\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Buttons>\n      {options.map((option) => (\n        <ButtonItem\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n          key={option}\n        >\n          {option}\n        </ButtonItem>\n      ))}\n    </Buttons>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  width: 500px;\n`;\nexport const Title = styled.h2`\n  // display: flex;\n  // justify-content: center;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SectionWrapper, Title } from \"./Section.styled\";\n\nfunction Section({ title, children }) {\n  return (\n    <SectionWrapper>\n      <Title>{title}</Title>\n      {children}\n    </SectionWrapper>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = { title: PropTypes.string, children: PropTypes.node };\n","import styled from \"@emotion/styled\";\n\nexport const Message = styled.p`\n  font-size: 1.5em;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Message } from \"./Notification.styled\";\n\nfunction Notification({ message }) {\n  return <Message>{message}</Message>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Statistics from \"../Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions\";\nimport Section from \"../Section\";\nimport Notification from \"../Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (value) => {\n    this.setState((prevState) => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return this.state.good === 0\n      ? 0\n      : Number.parseInt((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n    const statistics = Object.entries(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {Boolean(total) && (\n            <Statistics\n              statistics={statistics}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n          {!total && <Notification message=\"There is no feedback\" />}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n\nSection.propTypes = { title: PropTypes.string };\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nStatistics.propTypes = {\n  statistics: PropTypes.arrayOf(PropTypes.array),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}